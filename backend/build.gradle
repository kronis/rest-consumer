buildscript {

    repositories {
        mavenLocal()
        jcenter()
    }


    dependencies {
        classpath buildLibraries.boot_gradle_plugin
        classpath buildLibraries.docker
    }
}

plugins {
	id "com.gorylenko.gradle-git-properties" version "1.4.17"
}


apply plugin: 'org.springframework.boot'

ext {
	snippetsDir = file('build/generated-snippets')
}


sourceSets {
}


configurations {
}

processResources {
    filesMatching('application*.properties') { file -> file.expand(project.properties) }
}

dependencies {
    compile libraries.spring,
            libraries.spring_cloud,
            libraries.boot_autoconfigure,
            libraries.boot_web,
            libraries.thymeleaf,
            libraries.rest,
            libraries.http_builder,
            libraries.groovy,
            libraries.spring_boot_admin
}


test {
    jacoco {
        append = false
    }

    outputs.dir snippetsDir
}

jar {
}

bootRun {
    if (project.hasProperty('profile')) {
        args "--spring.profiles.active=${project.profile}"
    }
    systemProperties = System.properties
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
        testSourceDirs += file('src/integration-test/groovy')
        downloadSources = true
    }
}

apply plugin: 'docker'
task buildDocker(type: Docker) {
    baseImage = 'develar/java:latest'
    push = project.hasProperty('push')
    tag = 'ehv5de64442b6.azurecr.io/kronis/rest-consumer'
    addFile {
        from jar
        rename { 'app.jar' }
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
    exposePort(8080)
}

buildDocker.dependsOn(build)